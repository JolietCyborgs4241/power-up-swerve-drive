// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
#include "Robot.h"
using namespace frc;

OI* Robot::oi = NULL;

Pigeon* Robot::pigeon = NULL;

void Robot::RobotInit() {
	RobotMap::init();

	oi = new OI();

	pigeon = new Pigeon();
}

void Robot::DisabledInit() {

}

void Robot::DisabledPeriodic() {

}

void Robot::AutonomousInit() {
}

void Robot::AutonomousPeriodic() {
}

void Robot::TeleopInit() {
	// This makes sure that the autonomous stops running when
	// teleop starts running. If you want the autonomous to
	// continue until interrupted by another command, remove
	// this line or comment it out.
	cycleTime = GetClock();
	incnum = 1;

	pigeon->CalibratePigeon();
}

void Robot::TeleopPeriodic() {
	SmartDashboard::PutNumber("CycleTime", GetClock() - cycleTime);
	cycleTime = GetClock();

	Scheduler::GetInstance()->Run();

	SmartDashboard::PutNumber("Pigeon-Yaw", pigeon->GetYaw());
	SmartDashboard::PutNumber("Pigeon-Temp", pigeon->pigeon->GetTemp());
}

void Robot::TestPeriodic() {
	lw->Run();
}

START_ROBOT_CLASS(Robot);
